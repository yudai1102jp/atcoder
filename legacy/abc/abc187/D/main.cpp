#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
#define REP(i, n) for (ll i = 0; i < ll(n); i++)
#define REPD(i, n) for (ll i = n - 1; i >= 0; i--)
#define FOR(i, a, b) for (ll i = a; i < ll(b); i++)
#define FORD(i, a, b) for (ll i = a; i > b; i--)

#define ALL(x) x.begin(), x.end()
#define SIZE(x) ll(x.size())

#define INF32 2147483647          //2.147483647×10^{9}:32bit整数のinf
#define INF64 9223372036854775807 //9.223372036854775807×10^{18}:64bit整数のinf
#define MOD 1000000007            //問題による

//略記
#define V vector
#define P pair<int, int>
#define F first
#define S second
//出力(空白区切りで昇順に)
#define coutALL(x)                                \
    for (auto i = x.begin(); i != --x.end(); i++) \
        cout << *i << " ";                        \
    cout << *--x.end() << endl;

// Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    cin >> N;
    std::vector<long long> A(N);
    std::vector<long long> B(N);
    std::vector<long long> SUM(N);
    for (int i = 0; i < N; i++)
    {
        cin >> A[i] >> B[i];
    }

    V<V<ll>> abc(N, V<ll>(3));
    ll taka = 0;
    ll aoki = 0;
    REP(i, N)
    {
        abc[i][1] = A[i];
        abc[i][2] = B[i];
        abc[i][0] = 2 * A[i] + B[i];
        taka += B[i];
        aoki += A[i];
    }
    sort(abc.begin(), abc.end(),
         [](const V<ll> &x, const V<ll> &y) { return x[0] > y[0]; });

    ll now_t = 0;
    ll now_a = aoki;
    ll ans = 0;
    REP(i, N)
    {
        ans++;
        now_t += abc[i][1] + abc[i][2];
        now_a -= abc[i][1];
        if (now_t > now_a)
        {
            cout << ans << endl;
            break;
        }
    }

    return 0;
}
