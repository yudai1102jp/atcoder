#!/usr/bin/env python3
import copy


def solve(H, W, MAP, gw, gh, noww, nowh, time, used){
    now = MAP[nowh][noww]
    if now == 'G':
        return time
    if now == '#':
        return 0
    if used[nowh][noww]:
        return 0

    now_used = copy.deepcopy(used)

    now_used[nowh][noww] = 1

    ans = 10000000000000
    for i in [[0, 1], [1, 0], [0, -1], [-1, 0]]:
        temp = solve(H, W, MAP, gw, gh, noww+i[0], nowh+i[1], time+1, now_used)
        if temp:
            ans=min(ans)

}
# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)


def main():
    # Failed to predict input format
    H, W = map(int, input().split())
    MAP = []*H
    for i in range(H):
        temp = input()
        if 'S' in temp:
            sw = temp.index('S')
            sh = i
        if 'G' in temp:
            gw = temp.index('G')
            gh = i
        MAP[i] = temp

    used = [[0]*W for i in range(H)]
    print(solve(H, W, MAP, gw, gh, sw, sh, 0, used))


if __name__ == '__main__':
    main()
