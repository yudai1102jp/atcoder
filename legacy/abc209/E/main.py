#!/usr/bin/env python3
import sys


def solve(N: int, S: "List[str]"):
    s = {}
    e = {}
    for i in range(N):

        s[S[i][:3]] = i
        e[S[i][-3:]] = i

    allow = [[] for i in range(N)]
    for k, v in e.items():
        if k in s:
            allow[v].append(s[k])
    for i in range(N):
        if not allow[i]:
            print('Takahashi')
        if allow[i] = i:
            print("Drow")
            
    return


# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    s = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, s)


if __name__ == '__main__':
    main()
