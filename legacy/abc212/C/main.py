#!/usr/bin/env python3
import sys


def solve(N: int, M: int, A: "List[int]", B: "List[int]"):
    A.sort()
    B.sort()
    i = 0
    j = 0
    ans = 10**9+6
    while i < N and j < M:

        if A[i] < B[j]:
            ans = min(ans, abs(A[i]-B[j]))
            i += 1

        else:
            ans = min(ans, abs(A[i]-B[j]))
            if j < M-1:
                ans = min(ans, abs(A[i]-B[j+1]))
            j += 1

    print(ans)


# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    B = [int(next(tokens)) for _ in range(M)]  # type: "List[int]"
    solve(N, M, A, B)


if __name__ == '__main__':
    main()
