#!/usr/bin/env python3
import sys

MOD = 200  # type: int
YES = "Yes"  # type: str
NO = "No"  # type: str



def solve(N: int, A: "List[int]"):
    li=[[] for i in range(200)]

    for i in range(1,2**N):
        
        index=[j+1 for j in range(200) if i>>j&1]
        indexsum=sum([A[j] for j in range(200) if i>>j&1])%200
        if not li[indexsum]:
            li[indexsum]=index
            continue
        print(YES)
        print(f"{len(index)} {' '.join(map(str,index))}")
        lis=li[indexsum]
        print(f"{len(lis)} {' '.join(map(str,lis))}")
        return 

    print(NO)



    return



# Generated by 2.2.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
