#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(N: int, M: int, K: int):
    dp = [[0 for i in range(M+1)] for j in range(N+1)]
    for i in range(M):
        dp[0][1+i] = 1
    for i in range(K):
        dp[i+1][0] = 1
    for i in range(1, 1+M):
        for j in range(1, 1+N):
            dp[j][i] = dp[j-1][i]+dp[j][i-1]
            dp[j][i] %= MOD
    print(dp[-1][-1] % MOD)

    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, M, K)


if __name__ == '__main__':
    main()
