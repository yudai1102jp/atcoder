#!/usr/bin/env python3
import sys
from collections import deque

def solve(S: str):
    T=deque()
    flag=True
    for i in range(len(S)):
        if S[i]=='R':
            flag= not flag
        else:
            s=S[i]
            if flag:
                if T:
                    temp=T.pop()
                    if temp!=s:
                        T.append(temp)
                        T.append(s)
                else:
                    T.append(s)

            else:
                if T:
                    temp=T.popleft()
                    if temp!=s:
                        T.appendleft(temp)
                        T.appendleft(s)
                else:
                    T.appendleft(S[i])



    if flag:      
        for i in range(len(T)):
                print(T.popleft(), end='')
    else:
        for i in range(len(T)):
                print(T.pop(), end='')

    print()


    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
