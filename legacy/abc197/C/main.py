#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    ans = 10e10
    for flag in range(2**(N-1)):
        temp = []
        OR = 0

        for i in range(N-1):
            OR = OR | A[i]
            if flag >> i & 1:
                temp.append(OR)
                OR = 0
        OR = OR | A[N-1]
        temp.append(OR)
        XOR = 0
        for i in temp:
            XOR = XOR ^ i
        ans = min(ans, XOR)
    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)


if __name__ == '__main__':
    main()
