
# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():

    n = int(input())
    cx = [[int(i) for i in reversed(input().split())] for j in range(n)]
    if n == 1:
        print(abs(cx[0][1]))
        return

    cx.sort()
    cx += [[n+1, 0], [n+2, 0]]

    forward = cx[0][1]
    end = cx[0][1]

    now_c = cx[0][0]
    dp = [[0, 0]for i in range(n+2)]   # forward, end
    dnow = 0

    for i in range(n+2):
        if cx[i][0] != now_c:
            
            preend = end
            end = cx[i-1][1] 
            len = abs(end-forward)
            if dnow:
                dp[dnow][0] = min(dp[dnow-1][0]+abs(preforward - end) +
                                  len, dp[dnow-1][1]+abs(preend - end)+len)
                dp[dnow][1] = min(dp[dnow-1][0]+abs(preforward - forward) +
                                  len, dp[dnow-1][1]+abs(preend - forward)+len)
            else:
                dp[dnow][0] = abs(end)+len
                dp[dnow][1] = abs(forward)+len

            dnow += 1
            now_c = cx[i][0]

            preforward = forward
            forward = cx[i][1]

    print(min(dp[dnow-1][0], dp[dnow-1][1]))


if __name__ == '__main__':
    main()
