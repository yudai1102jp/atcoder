#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]", B: "List[int]", C: "List[int]"):
    ans=0
    A.sort()
    B.sort()
    C.sort()
    a=0
    b=0
    c=0
    while a < N and b < N and c < N:
    
        if A[a]<B[b]:
            if B[b]<C[c]:
                ans+=1
                b+=1
                c+=1
                a+=1
            else:
                c+=1

        else:
            if B[b]<C[c]:
                b+=1
            else:
                b+=1
                c+=1

    print(ans)
    
    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    B = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    C = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A, B, C)

if __name__ == '__main__':
    main()
