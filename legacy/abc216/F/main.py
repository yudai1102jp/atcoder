#!/usr/bin/env python3
import sys

MOD = 998244353  # type: int


def solve(N: int, A: "List[int]", B: "List[int]"):
    A_sort = [(i, A[i]) for i in range(N)]
    A_sort.sort()
    now_set = set()
    ans = 0
    B_dict = [0]*(N*N+10000)
    for i in range(N):
        now = A_sort[i][1]
        now_set.add(now)
        for i in range(N*N+10000):
            B_dict
        if B[now] < A[now]:

            add_ans =

        ans += add_ans

    return


# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    B = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A, B)


if __name__ == '__main__':
    main()
